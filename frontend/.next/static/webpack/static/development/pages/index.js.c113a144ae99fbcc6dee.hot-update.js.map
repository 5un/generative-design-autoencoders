{"version":3,"file":"static/webpack/static/development/pages/index.js.c113a144ae99fbcc6dee.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport _ from 'lodash'\nimport { generateModel } from '../lib/model-generator'\n\nconst numFeatures = 10\nconst serverUrl = 'http://localhost:5000/'\n\nexport default class Index extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.updateModelDebounced = _.debounce(this.updateModel, 250, { 'maxWait': 1000 })\n    this.state = {\n      inputVec: _.times(numFeatures, _.constant(0))\n    }\n  }\n\n  componentDidMount() {\n    \n  }\n\n  handleButtonClick() {\n    generateModel()\n  }\n\n  handleSliderChange(index, value) {\n    let inputVec = this.state.inputVec\n    inputVec.splice(index, 1, value / 100)\n    this.setState({ inputVec })\n    this.updateModelDebounced()\n    // TODO request image\n  }\n\n  updateModel() {\n    console.log('updateModel', this.state.inputVec)\n    // console.log()\n    axios.get(serverUrl, { responseType:\"blob\" })\n      .then(response => {\n\n          var reader = new window.FileReader();\n          reader.readAsDataURL(response.data); \n          reader.onload = () => {\n\n              var imageDataUrl = reader.result;\n              this.setState({ previewImg: imageDataUrl })\n              console.log('got data url')\n              //imageElement.setAttribute(\"src\", imageDataUrl);\n\n          }\n      });\n  }\n\n  render() {\n    const { previewImg } = this.state \n    return (\n      <div>\n        <h1>Generative Design with Autoencoders</h1>\n        <div>\n        {_.range(numFeatures).map(i => (\n          <div key={i}>\n            <input type=\"range\" min=\"0\" max=\"100\" class=\"slider\" \n                    onChange={e => {this.handleSliderChange(i, e.target.value)}}/>\n          </div>\n        ))}\n        </div>\n\n        {previewImg &&\n          <img src={previewImg} />\n        }\n\n        <button onClick={this.handleButtonClick.bind(this)}>Do something</button>\n      </div>\n    )\n  }\n\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAHA;AAMA;AACA;;;AACA;;;AAIA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAlEA;AACA;;;;;A","sourceRoot":""}